        -:    0:Source:/home/borzor/CLionProjects/docxtotxt/mainDoc/ParserCommons/DocumentCommons.h
        -:    0:Graph:/home/borzor/CLionProjects/docxtotxt/cmake-build-debug-coverage/CMakeFiles/docxtotxt.dir/mainDoc/source/DocumentLoader.cpp.gcno
        -:    0:Data:/home/borzor/CLionProjects/docxtotxt/cmake-build-debug-coverage/CMakeFiles/docxtotxt.dir/mainDoc/source/DocumentLoader.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by boris on 6/9/22.
        -:    3://
        -:    4:#include <locale>
        -:    5:#include <codecvt>
        -:    6:#include <zip.h>
        -:    7:#include <map>
        -:    8:#include <tinyxml2.h>
        -:    9:#include "DocumentMetaDataCommons.h"
        -:   10:#include <algorithm>
        -:   11:#include <vector>
        -:   12:
        -:   13:#ifndef DOCXTOTXT_DOCUMENTCOMMONS_H
        -:   14:#define DOCXTOTXT_DOCUMENTCOMMONS_H
        -:   15:namespace docxtotxt {
        -:   16:#define CONTENT_TYPE_NAME "[Content_Types].xml"
        -:   17:
        -:   18:#define DOC_MAIN_FILE "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"
        -:   19:#define DOC_STYLES_FILE "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"
        -:   20:#define DOC_IMAGE_FILE_PATH "word/_rels/document.xml.rels"
        -:   21:#define DOC_FOOTNOTES_FILE "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml"
        -:   22:#define DOC_ENDNOTES_FILE "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml"
        -:   23:
        -:   24:#define XLS_SHARED_STRINGS "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml"
        -:   25:#define XLS_WORKSHEET "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml"
        -:   26:#define XLS_WORKBOOK "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml"
        -:   27:#define XLS_SLIDE_NOTE "application/vnd.openxmlformats-officedocument.drawing+xml"
        -:   28:
        -:   29:#define PPT_MAIN_FILE "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml"
        -:   30:#define PPT_SLIDE_CONTENT_TYPE "application/vnd.openxmlformats-officedocument.presentationml.slide+xml"
        -:   31:#define PPT_SLIDE_NOTE "application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml"
        -:   32:#define PPT_TABLE_URI "http://schemas.openxmlformats.org/drawingml/2006/table"
        -:   33:
        -:   34:#define TWIP_TO_CHARACTER 120
        -:   35:
        -:   36:#define PRESENTATION_WIDTH 150
        -:   37:#define PRESENTATION_HEIGHT 40
        -:   38:
        -:   39:    using wstringConvert = std::wstring_convert<std::codecvt_utf8<wchar_t>, wchar_t>;
        -:   40:
function _ZN9docxtotxt9ends_withERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 0 returned 0% blocks executed 0%
    #####:   41:    inline bool ends_with(std::string const &value, std::string const &ending) {
    #####:   42:        if (ending.size() > value.size()) return false;
    %%%%%:   42-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   42-block  1
    #####:   43:        return std::equal(ending.rbegin(), ending.rend(), value.rbegin());
    %%%%%:   43-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   43-block  1
    %%%%%:   43-block  2
    $$$$$:   43-block  3
    $$$$$:   43-block  4
        -:   44:    }
        -:   45:
function _ZN9docxtotxt11starts_withERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 458 returned 100% blocks executed 100%
      458:   46:    inline bool starts_with(std::string const &value, std::string const &starting) {
      458:   47:        return value.rfind(starting, 0) == 0;
      458:   47-block  0
call    0 returned 458
        -:   48:    }
        -:   49:
        -:   50:    enum justify_t {
        -:   51:        left,
        -:   52:        right,
        -:   53:        center
        -:   54:    };
        -:   55:
        -:   56:    enum tabCharacter {
        -:   57:        dot,
        -:   58:        none
        -:   59:    };
        -:   60:
        -:   61:    typedef struct {
        -:   62:        size_t left;
        -:   63:        size_t right;
        -:   64:        size_t hanging;
        -:   65:        size_t firstLine;
        -:   66:    } indentation;
        -:   67:
        -:   68:    typedef struct {
        -:   69:        size_t before;
        -:   70:        size_t after;
        -:   71:    } lineSpacing;
        -:   72:
        -:   73:    typedef struct { //val needed?
        -:   74:        size_t pos;
        -:   75:        tabCharacter character;
        -:   76:    } tabulation;
        -:   77:
        -:   78:    typedef struct {
        -:   79:        std::map<std::string, std::string> imageRelationship;
        -:   80:        std::map<std::string, std::string> hyperlinkRelationship;
        -:   81:        std::map<std::string, std::string> notes;
        -:   82:        std::map<std::string, std::string> drawing;
        -:   83:    } relations_t;
        -:   84:    typedef struct {
        -:   85:        size_t offsetX;
        -:   86:        size_t offsetY;
        -:   87:        size_t objectSizeX;
        -:   88:        size_t objectSizeY;
        -:   89:    } objectInfo_t;
        -:   90:
        -:   91:    typedef struct {
        -:   92:        objectInfo_t objectInfo;
        -:   93:        std::string rId;
        -:   94:        std::string description;
        -:   95:    } picture;
        -:   96:
        -:   97:    struct draw {
        -:   98:        std::string name;
        -:   99:        picture pic;
        -:  100:        relations_t relations;
        -:  101:
        -:  102:        bool operator==(const std::string &str) const {
        -:  103:            return (name == str);
        -:  104:        }
        -:  105:    };
        -:  106:
        -:  107:    enum docTypes {
        -:  108:        pptx,
        -:  109:        docx,
        -:  110:        xlsx
        -:  111:    };
        -:  112:    typedef struct {
        -:  113:        std::wostream *output;
        -:  114:        uint32_t flags;
        -:  115:        const char *filePath;
        -:  116:        zip_t *input;
        -:  117:        std::string pathToDraws;
        -:  118:        docTypes docType;
        -:  119:    } options_t;
        -:  120:
        -:  121:}
        -:  122:#endif //DOCXTOTXT_DOCUMENTCOMMONS_H
