        -:    0:Source:/home/borzor/CLionProjects/docxtotxt/mainDoc/ParserCommons/CommonFunctions.h
        -:    0:Graph:/home/borzor/CLionProjects/docxtotxt/cmake-build-debug-coverage/CMakeFiles/docxtotxt.dir/main.cpp.gcno
        -:    0:Data:/home/borzor/CLionProjects/docxtotxt/cmake-build-debug-coverage/CMakeFiles/docxtotxt.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by borzor on 12/16/22.
        -:    3://
        -:    4:#include <cmath>
        -:    5:#include "DocumentCommons.h"
        -:    6:#include "tinyxml2.h"
        -:    7:
        -:    8:#ifndef DOCXTOTXT_COMMONFUNCTIONS_H
        -:    9:#define DOCXTOTXT_COMMONFUNCTIONS_H
        -:   10:namespace docxtotxt {
        -:   11:/*!
        -:   12: * \brief Функция для извлечения информации координат объекта
        -:   13: * @param xfrm Элемент, дочерние элементы которого содержат информацию о координатах
        -:   14: * @return
        -:   15: */
function _ZN9docxtotxtL17extractObjectInfoEPN8tinyxml210XMLElementE called 0 returned 0% blocks executed 0%
    #####:   16:    static objectInfo_t extractObjectInfo(tinyxml2::XMLElement *xfrm) {
    #####:   17:        objectInfo_t object = {};
    #####:   18:        if (xfrm != nullptr) {
    %%%%%:   18-block  0
branch  0 never executed
branch  1 never executed
    #####:   19:            auto off = xfrm->FirstChildElement("a:off");
    %%%%%:   19-block  0
call    0 never executed
    #####:   20:            auto ext = xfrm->FirstChildElement("a:ext");
call    0 never executed
    #####:   21:            if (off != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   22:                object.offsetX = strtol(off->Attribute("x"), nullptr, 10);
    %%%%%:   22-block  0
call    0 never executed
call    1 never executed
    #####:   23:                object.offsetY = strtol(off->Attribute("y"), nullptr, 10);
call    0 never executed
call    1 never executed
        -:   24:            }
    #####:   25:            if (ext != nullptr) {
    %%%%%:   25-block  0
branch  0 never executed
branch  1 never executed
    #####:   26:                object.objectSizeX = strtol(ext->Attribute("cx"), nullptr, 10);
    %%%%%:   26-block  0
call    0 never executed
call    1 never executed
    #####:   27:                object.objectSizeY = strtol(ext->Attribute("cy"), nullptr, 10);
call    0 never executed
call    1 never executed
        -:   28:            }
        -:   29:        }
    #####:   30:        return object;
    %%%%%:   30-block  0
        -:   31:    }
        -:   32:
        -:   33:/*!
        -:   34: * \brief Функция для извлечения picture объекта
        -:   35: * @param element Элемент, дочерние элементы которого содержат информацию о изображении
        -:   36: * @param prefixTag Префикс тэга, зависящий от исходного документа
        -:   37: * @return
        -:   38: */
function _ZN9docxtotxtL14extractPictureEPN8tinyxml210XMLElementERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   39:    static picture extractPicture(tinyxml2::XMLElement *element, const std::string &prefixTag) {
    #####:   40:        picture object;
    %%%%%:   40-block  0
call    0 never executed
    #####:   41:        auto spPr = element->FirstChildElement(std::string(prefixTag + ":spPr").c_str());
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   41-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   41-block  1
call    7 never executed
    $$$$$:   41-block  2
call    8 never executed
    $$$$$:   41-block  3
    #####:   42:        auto blipFill = element->FirstChildElement(std::string(prefixTag + ":blipFill").c_str());
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   42-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   42-block  1
call    7 never executed
    $$$$$:   42-block  2
call    8 never executed
    $$$$$:   42-block  3
    #####:   43:        if (blipFill != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   44:            auto blip = blipFill->FirstChildElement("a:blip");
    %%%%%:   44-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   45:            if (blip != nullptr) {
    %%%%%:   45-block  0
branch  0 never executed
branch  1 never executed
    #####:   46:                object.rId = blip->Attribute("r:embed");
    %%%%%:   46-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   46-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:   47:            }
        -:   48:        }
    #####:   49:        if (spPr != nullptr) {
    %%%%%:   49-block  0
branch  0 never executed
branch  1 never executed
    #####:   50:            auto xfrm = spPr->FirstChildElement("a:xfrm");
    %%%%%:   50-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   51:            object.objectInfo = extractObjectInfo(xfrm);
    %%%%%:   51-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   52:        }
    #####:   53:        return object;
    %%%%%:   53-block  0
    %%%%%:   53-block  1
        -:   54:    }
        -:   55:/*!
        -:   56: * Функция для установки настроек выравнивания
        -:   57: * @param jc Элемент, содержащий настройки выравнивания
        -:   58: * @param settings Структура настроек
        -:   59: */
function _ZN9docxtotxtL10setJustifyEPN8tinyxml210XMLElementERNS_9justify_tE called 0 returned 0% blocks executed 0%
    #####:   60:    static void setJustify(tinyxml2::XMLElement *jc, docxtotxt::justify_t &settings) {
    #####:   61:        if (jc != nullptr) {
    %%%%%:   61-block  0
branch  0 never executed
branch  1 never executed
    #####:   62:            std::string justify = jc->Attribute("w:val");
    %%%%%:   62-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   62-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   62-block  2
call    7 never executed
    $$$$$:   62-block  3
    #####:   63:            if (!strcmp(justify.c_str(), "left") || !strcmp(justify.c_str(), "both"))
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   63-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   63-block  1
    %%%%%:   63-block  2
    %%%%%:   63-block  3
branch  6 never executed
branch  7 never executed
    #####:   64:                settings = docxtotxt::justify_t::left;
    %%%%%:   64-block  0
    #####:   65:            else if (!strcmp(justify.c_str(), "right"))
    %%%%%:   65-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   66:                settings = docxtotxt::justify_t::right;
    %%%%%:   66-block  0
    #####:   67:            else if (!strcmp(justify.c_str(), "center"))
    %%%%%:   67-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   68:                settings = docxtotxt::justify_t::center;
    %%%%%:   68-block  0
        -:   69:        }
    #####:   70:    }
    %%%%%:   70-block  0
        -:   71:
        -:   72:/*!
        -:   73: * Функция для установки настроек отступа
        -:   74: * @param jc Элемент, содержащий настройки отступа
        -:   75: * @param settings Структура настроек
        -:   76: */
function _ZN9docxtotxtL14setIndentationEPN8tinyxml210XMLElementERNS_11indentationE called 0 returned 0% blocks executed 0%
    #####:   77:    static void setIndentation(tinyxml2::XMLElement *ind, docxtotxt::indentation &settings) {
    #####:   78:        if (ind != nullptr) {
    %%%%%:   78-block  0
branch  0 never executed
branch  1 never executed
    #####:   79:            auto left = ind->Attribute("w:left");
    %%%%%:   79-block  0
call    0 never executed
    #####:   80:            if (left != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   81:                settings.left = strtol(left, nullptr, 10) / TWIP_TO_CHARACTER;
    %%%%%:   81-block  0
call    0 never executed
        -:   82:            }
    #####:   83:            auto right = ind->Attribute("w:right");
    %%%%%:   83-block  0
call    0 never executed
    #####:   84:            if (right != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   85:                settings.right = strtol(right, nullptr, 10) / TWIP_TO_CHARACTER;
    %%%%%:   85-block  0
call    0 never executed
        -:   86:            }
    #####:   87:            auto hanging = ind->Attribute("w:hanging");
    %%%%%:   87-block  0
call    0 never executed
    #####:   88:            if (hanging != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   89:                settings.hanging = strtol(hanging, nullptr, 10) / TWIP_TO_CHARACTER;
    %%%%%:   89-block  0
call    0 never executed
        -:   90:            }
    #####:   91:            auto firstLine = ind->Attribute("w:firstLine");
    %%%%%:   91-block  0
call    0 never executed
    #####:   92:            if (firstLine != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   93:                settings.firstLine = strtol(firstLine, nullptr, 10) / TWIP_TO_CHARACTER;
    %%%%%:   93-block  0
call    0 never executed
        -:   94:            }
        -:   95:        }
    #####:   96:    }
        -:   97:
        -:   98:/*!
        -:   99: * Функция для установки настроек межстрочного отступа
        -:  100: * @param jc Элемент, содержащий настройки омежстрочного тступа
        -:  101: * @param settings Структура настроек
        -:  102: */
function _ZN9docxtotxtL10setSpacingEPN8tinyxml210XMLElementERNS_11lineSpacingE called 0 returned 0% blocks executed 0%
    #####:  103:    static void setSpacing(tinyxml2::XMLElement *spacing, docxtotxt::lineSpacing &settings) {
    #####:  104:        if (spacing != nullptr) {
    %%%%%:  104-block  0
branch  0 never executed
branch  1 never executed
    #####:  105:            auto before = spacing->Attribute("w:before");
    %%%%%:  105-block  0
call    0 never executed
    #####:  106:            if (before != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:  107:                settings.before = std::lround(strtol(before, nullptr, 10) / TWIP_TO_CHARACTER);
    %%%%%:  107-block  0
call    0 never executed
call    1 never executed
        -:  108:            }
    #####:  109:            auto after = spacing->Attribute("w:after");
    %%%%%:  109-block  0
call    0 never executed
    #####:  110:            if (after != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:  111:                settings.after = std::lround(strtol(after, nullptr, 10) / TWIP_TO_CHARACTER);
    %%%%%:  111-block  0
call    0 never executed
call    1 never executed
        -:  112:            }
        -:  113:        }
    #####:  114:    }
        -:  115:
        -:  116:/*!
        -:  117: * Функция для установки настроек заполнения
        -:  118: * @param jc Элемент, содержащий настройки заполнения
        -:  119: * @param settings Структура настроек
        -:  120: */
function _ZN9docxtotxtL13setTabulationEPN8tinyxml210XMLElementERSt6vectorINS_10tabulationESaIS4_EE called 0 returned 0% blocks executed 0%
    #####:  121:    static void setTabulation(tinyxml2::XMLElement *tabs, std::vector<docxtotxt::tabulation> &settings) {
    #####:  122:        if (tabs != nullptr) {
    %%%%%:  122-block  0
branch  0 never executed
branch  1 never executed
    #####:  123:            auto *tab = tabs->FirstChildElement();
    %%%%%:  123-block  0
call    0 never executed
    #####:  124:            while (tab != nullptr) {
    %%%%%:  124-block  0
branch  0 never executed
branch  1 never executed
        -:  125:                docxtotxt::tabulation tmpTab;
    #####:  126:                tmpTab.character = docxtotxt::none;
    #####:  127:                auto leader = tab->Attribute("w:leader");
    %%%%%:  127-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  128:                if (leader != nullptr) {
    %%%%%:  128-block  0
branch  0 never executed
branch  1 never executed
    #####:  129:                    if (!strcmp(leader, "dot")) {
    %%%%%:  129-block  0
branch  0 never executed
branch  1 never executed
    #####:  130:                        tmpTab.character = docxtotxt::dot;
    %%%%%:  130-block  0
        -:  131://                } else if (!strcmp(leader, "heavy")) {
        -:  132://                    tmpTab.character = docxtotxt::heavy;
        -:  133://                } else if (!strcmp(leader, "hyphen")) {
        -:  134://                    tmpTab.character = docxtotxt::hyphen;
        -:  135://                } else if (!strcmp(leader, "middleDot")) {
        -:  136://                    tmpTab.character = docxtotxt::middleDot;
        -:  137://                } else if (!strcmp(leader, "none")) {
        -:  138://                    tmpTab.character = docxtotxt::none;
        -:  139://                } else if (!strcmp(leader, "underScore")) {
        -:  140://                    tmpTab.character = docxtotxt::underscore;
        -:  141:                    }
        -:  142:                }
    #####:  143:                auto pos = tab->Attribute("w:pos");
    %%%%%:  143-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  144:                if (pos != nullptr) {
    %%%%%:  144-block  0
branch  0 never executed
branch  1 never executed
    #####:  145:                    tmpTab.pos = strtol(pos, nullptr, 10) / TWIP_TO_CHARACTER;
    %%%%%:  145-block  0
call    0 never executed
        -:  146:                }
    #####:  147:                settings.emplace_back(tmpTab);
    %%%%%:  147-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  148:                tab = tab->NextSiblingElement();
    %%%%%:  148-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  148-block  1
        -:  149:            }
        -:  150:        }
    #####:  151:    }
    %%%%%:  151-block  0
        -:  152:
        -:  153:}
        -:  154:#endif //DOCXTOTXT_COMMONFUNCTIONS_H
